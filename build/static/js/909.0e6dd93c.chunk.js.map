{"version":3,"file":"static/js/909.0e6dd93c.chunk.js","mappings":"gJAKA,MAyCA,EAzCgBA,GAEVA,EAAMC,MAENC,EAAAA,EAAAA,KAAA,KACEC,UAAS,kBAAAC,OAAoBJ,EAAMK,MAAQ,UAAS,KAAAD,OAClDJ,EAAMM,SAAW,kBAAiB,KAAAF,OAChCJ,EAAMO,QAAU,kBACpBN,KAAMD,EAAMC,KAAKO,SAEhBR,EAAMQ,WAITR,EAAMS,IAENP,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CACHD,GAAIT,EAAMS,GACVE,MAAOX,EAAMW,MACbR,UAAS,kBAAAC,OAAoBJ,EAAMK,MAAQ,UAAS,KAAAD,OAClDJ,EAAMM,SAAW,kBAAiB,KAAAF,OAChCJ,EAAMO,QAAU,kBAAmBC,SAEtCR,EAAMQ,YAKXN,EAAAA,EAAAA,KAAA,UACEC,UAAS,kBAAAC,OAAoBJ,EAAMK,MAAQ,UAAS,KAAAD,OAClDJ,EAAMM,SAAW,kBAAiB,KAAAF,OAChCJ,EAAMO,QAAU,kBACpBK,KAAMZ,EAAMY,KACZC,QAASb,EAAMa,QACfC,SAAUd,EAAMc,SAASN,SAExBR,EAAMQ,U,gECpCb,MA6DA,EA7DoBR,IAClB,MAAOe,EAAMC,IAAWC,EAAAA,EAAAA,aACjBC,EAAYC,IAAiBF,EAAAA,EAAAA,aAC7BG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,GAEjCK,GAAgBC,EAAAA,EAAAA,WAEtBC,EAAAA,EAAAA,YAAU,KACR,IAAKT,EACH,OAEF,MAAMU,EAAa,IAAIC,WACvBD,EAAWE,OAAS,KAClBR,EAAcM,EAAWG,OAAO,EAElCH,EAAWI,cAAcd,EAAK,GAC7B,CAACA,IAqBJ,OACEe,EAAAA,EAAAA,MAAA,OAAK3B,UAAU,eAAcK,SAAA,EAC3BN,EAAAA,EAAAA,KAAA,SACE6B,GAAI/B,EAAM+B,GACVC,IAAKV,EACLW,MAAO,CAAEC,QAAS,QAClBtB,KAAK,OACLuB,OAAO,kBACPC,SA3BgBC,IACpB,IAAIC,EACAC,EAAcnB,EACdiB,EAAMG,OAAOC,OAAuC,IAA9BJ,EAAMG,OAAOC,MAAMC,QAC3CJ,EAAaD,EAAMG,OAAOC,MAAM,GAChCzB,EAAQsB,GACRjB,GAAW,GACXkB,GAAc,IAEdlB,GAAW,GACXkB,GAAc,GAEhBvC,EAAM2C,QAAQ3C,EAAM+B,GAAIO,EAAYC,EAAY,KAiB9CT,EAAAA,EAAAA,MAAA,OAAK3B,UAAS,gBAAAC,OAAkBJ,EAAM4C,QAAU,UAAWpC,SAAA,EACzDsB,EAAAA,EAAAA,MAAA,OAAK3B,UAAU,wBAAuBK,SAAA,CACnCU,IAAchB,EAAAA,EAAAA,KAAA,OAAK2C,IAAK3B,EAAY4B,IAAI,aACvC5B,IAAchB,EAAAA,EAAAA,KAAA,KAAAM,SAAG,8BAErBN,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAACnC,KAAK,SAASC,QAnBHmC,KACvB1B,EAAc2B,QAAQC,OAAO,EAkBuB1C,SAAC,gBAG/CY,IAAWlB,EAAAA,EAAAA,KAAA,KAAAM,SAAIR,EAAMmD,iBAErB,C,gECzDV,MAAMC,EAAeA,CAACC,EAAOC,KAE3B,OAAQA,EAAO1C,MACb,IAAK,SACH,MAAO,IACFyC,EACHE,MAAOD,EAAOE,IACdpC,SAASqC,EAAAA,EAAAA,IAASH,EAAOE,IAAKF,EAAOI,aAEvC,IAAK,QACL,MAAM,IACDL,EACHM,WAAU,GAEd,QACE,OAAON,EACX,EAoEF,EAjEerD,IAEb,MAAO4D,EAAYC,IAAWC,EAAAA,EAAAA,YAAWV,EAAc,CACrDG,MAAOvD,EAAM+D,cAAgB,GAC7B3C,QAASpB,EAAMgE,eAAgB,EAC/BL,WAAW,KAGP,GAAC5B,EAAE,QAAEY,GAAW3C,GAChB,MAACuD,EAAK,QAAGnC,GAAWwC,GAG1BpC,EAAAA,EAAAA,YAAU,KAETmB,EAAQZ,EAAIwB,EAAOnC,EAAQ,GAC1B,CAACW,EAAIY,EAASY,EAAOnC,IAGvB,MAAM6C,EAAiB5B,IACrBwB,EAAQ,CACNjD,KAAM,SACN4C,IAAKnB,EAAMG,OAAOe,MAClBG,WAAY1D,EAAM0D,YAClB,EAGEQ,EAAcA,KAClBL,EAAQ,CACJjD,KAAK,SACP,EAGEuD,EACc,UAAlBnE,EAAMmE,SACJjE,EAAAA,EAAAA,KAAA,SACE6B,GAAI/B,EAAM+B,GACVnB,KAAMZ,EAAMY,KACZwD,YAAapE,EAAMoE,YACnBhC,SAAU6B,EACVV,MAAOK,EAAWL,MAClBc,OAAQH,KAGVhE,EAAAA,EAAAA,KAAA,YACE6B,GAAI/B,EAAM+B,GACVuC,KAAMtE,EAAMsE,MAAQ,EACpBlC,SAAU6B,EACVV,MAAOK,EAAWL,MAClBc,OAAQH,IAId,OACEpC,EAAAA,EAAAA,MAAA,OACE3B,UAAS,gBAAAC,QACNwD,EAAWxC,SAAWwC,EAAWD,WAAa,yBAC9CnD,SAAA,EAEHN,EAAAA,EAAAA,KAAA,SAAOqE,QAASvE,EAAM+B,GAAGvB,SAAER,EAAMwE,QAChCL,GACCP,EAAWxC,SAAWwC,EAAWD,YAAazD,EAAAA,EAAAA,KAAA,KAAAM,SAAIR,EAAMmD,cACtD,C,qDClFV,MAQA,EARanD,IAETE,EAAAA,EAAAA,KAAA,OAAKC,UAAS,QAAAC,OAAUJ,EAAMG,WAAa8B,MAAOjC,EAAMiC,MAAMzB,SAC3DR,EAAMQ,U,uECDb,MAaA,EAbmBR,IAEfE,EAAAA,EAAAA,KAACuE,EAAAA,EAAK,CACJC,SAAU1E,EAAM2E,QAChBC,OAAO,qBACPC,OAAQ7E,EAAM8E,MACdC,QAAQ7E,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAAClC,QAASb,EAAM2E,QAAQnE,SAAC,SAAcA,UAEtDN,EAAAA,EAAAA,KAAA,KAAAM,SAAIR,EAAM8E,S,kFCNhB,MAAME,EAAgBhF,IACpB,MAAMiF,GACJnD,EAAAA,EAAAA,MAAA,OAAK3B,UAAS,SAAAC,OAAWJ,EAAMG,WAAa8B,MAAOjC,EAAMiC,MAAMzB,SAAA,EAC7DN,EAAAA,EAAAA,KAAA,UAAQC,UAAS,iBAAAC,OAAmBJ,EAAMkF,aAAc1E,UACtDN,EAAAA,EAAAA,KAAA,MAAAM,SAAKR,EAAM4E,YAEb9C,EAAAA,EAAAA,MAAA,QACEqD,SACEnF,EAAMmF,SACFnF,EAAMmF,SACL9C,IACCA,EAAM+C,gBAAgB,EAE7B5E,SAAA,EAEDN,EAAAA,EAAAA,KAAA,OAAKC,UAAS,kBAAAC,OAAoBJ,EAAMqF,cAAe7E,SACpDR,EAAMQ,YAETN,EAAAA,EAAAA,KAAA,UAAQC,UAAS,iBAAAC,OAAmBJ,EAAMsF,aAAc9E,SACrDR,EAAM+E,eAMf,OAAOQ,EAAAA,aAAsBN,EAASO,SAASC,eAAe,cAAc,EAqB9E,EAlBezF,IAGX8B,EAAAA,EAAAA,MAAC4D,EAAAA,SAAc,CAAAlF,SAAA,CACZR,EAAM6E,OAAQ3E,EAAAA,EAAAA,KAACyF,EAAAA,EAAQ,CAAC9E,QAASb,EAAM0E,YACxCxE,EAAAA,EAAAA,KAAC0F,EAAAA,EAAa,CACZC,GAAI7F,EAAM6E,KACViB,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,QAAOzF,UAElBN,EAAAA,EAAAA,KAAC8E,EAAY,IAAKhF,Q,8CC7C1B,MAAMkG,EAAcA,CAAC7C,EAAOC,KAC1B,OAAQA,EAAO1C,MACb,IAAK,eACH,IAAIuF,GAAc,EAClB,IAAK,MAAMC,KAAW/C,EAAMgD,OACtBhD,EAAMgD,OAAOD,KAIfD,EADEC,IAAY9C,EAAO8C,QACPD,GAAe7C,EAAOlC,QAEtB+E,GAAe9C,EAAMgD,OAAOD,GAAShF,SAGvD,MAAO,IACFiC,EACHgD,OAAQ,IACHhD,EAAMgD,OACT,CAAC/C,EAAO8C,SAAU,CAAE7C,MAAOD,EAAOC,MAAOnC,QAASkC,EAAOlC,UAE3DA,QAAS+E,GAEX,IAAK,WACH,MAAM,CACJE,OAAQ/C,EAAO+C,OACfjF,QAASkC,EAAOgD,aAEtB,QACE,OAAOjD,EACX,EA6BF,EA1BgBkD,CAACC,EAAeC,KAC9B,MAAOC,EAAW7C,IAAWC,EAAAA,EAAAA,YAAWoC,EAAa,CACnDG,OAAQG,EACRpF,QAASqF,IAoBX,MAAO,CAACC,GAjBaC,EAAAA,EAAAA,cAAY,CAAC5E,EAAIwB,EAAOnC,KAC3CyC,EAAQ,CACNjD,KAAM,eACN2C,MAAOA,EACPnC,QAASA,EACTgF,QAASrE,GACT,GACD,KAEiB4E,EAAAA,EAAAA,cAAY,CAACC,EAAWC,KAC1ChD,EAAQ,CACNjD,KAAM,WACNyF,OAAQO,EACRN,YAAaO,GACb,GACF,IAE2C,C,8CCvDxC,MAAMC,EAAgBA,KAC3B,MAAOC,EAAWC,IAAgB/F,EAAAA,EAAAA,WAAS,IACpC6D,EAAOmC,IAAYhG,EAAAA,EAAAA,YAEpBiG,GAAoB3F,EAAAA,EAAAA,QAAO,IAE3B4F,GAAcR,EAAAA,EAAAA,cAClBS,eAAOC,GAAoD,IAA/CC,EAAMC,UAAA7E,OAAA,QAAA8E,IAAAD,UAAA,GAAAA,UAAA,GAAG,MAAOE,EAAOF,UAAA7E,OAAA,QAAA8E,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGG,EAAIH,UAAA7E,OAAA,QAAA8E,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAC/CP,GAAa,GAEb,MAAMW,EAAiB,IAAIC,gBAC3BV,EAAkBjE,QAAQ4E,KAAKF,GAE/B,IACE,MAAMG,QAAiBC,MAAMV,EAAK,CAChCC,SACAG,UACAC,OACAM,OAAQL,EAAeK,SAEnBC,QAAqBH,EAASI,OAMpC,GAJAhB,EAAkBjE,QAAUiE,EAAkBjE,QAAQkF,QACnDC,GAAYA,IAAYT,KAGtBG,EAASO,GACZ,MAAM,IAAIC,MAAML,EAAaM,SAG/B,OADAvB,GAAa,GACNiB,CACT,CAAE,MAAOnD,GAGP,MAFAmC,EAASnC,EAAMyD,SACfvB,GAAa,GACPlC,CACR,CACF,GACA,IAaF,OANAtD,EAAAA,EAAAA,YAAU,IACD,KACL0F,EAAkBjE,QAAQuF,SAASC,GAAcA,EAAUC,SAAQ,GAEpE,IAEI,CAAE3B,YAAWjC,QAAOqC,cAAawB,WAVrBA,KACjB1B,EAAS,KAAK,EASoC,C,6DCpDtD,MAAM2B,EAAyB,UACzBC,EAA2B,YAC3BC,EAA2B,YAG3BC,EAAuB,QAGhBC,EAAoBA,KAAA,CAASpI,KAAMgI,IAEnCK,EAAsBzF,IAAG,CACpC5C,KAAMiI,EACNrF,IAAKA,IAQM0F,EAAkBA,KAAA,CAAStI,KAAMmI,IAGjCtF,EAAWA,CAACF,EAAOG,KAC9B,IAAItC,GAAU,EACd,IAAK,MAAM+H,KAAazF,EAClByF,EAAUvI,OAASgI,IACrBxH,EAAUA,GAAWmC,EAAM6F,OAAO1G,OAAS,GAEzCyG,EAAUvI,OAASiI,IACrBzH,EAAUA,GAAWmC,EAAM6F,OAAO1G,QAAUyG,EAAU3F,KAEpD2F,EAAUvI,OAASkI,IACrB1H,EAAUA,GAAWmC,EAAM6F,OAAO1G,QAAUyG,EAAU3F,KA9BjC,QAgCnB2F,EAAUvI,OACZQ,EAAUA,IAAYmC,GAAS4F,EAAU3F,KAhCpB,QAkCnB2F,EAAUvI,OACZQ,EAAUA,IAAYmC,GAAS4F,EAAU3F,KAEvC2F,EAAUvI,OAASmI,IACrB3H,EAAUA,GAAW,iBAAiBiI,KAAK9F,IAG/C,OAAOnC,CAAO,C,6JC1BhB,MA4IA,EA5IakI,KACX,MAAMC,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IACjBC,EAAaC,IAAkB1I,EAAAA,EAAAA,WAAS,IACzC,UAAE8F,EAAS,MAAEjC,EAAK,YAAEqC,EAAW,WAAEwB,IAAe7B,EAAAA,EAAAA,MAE/CJ,EAAWkD,EAAcC,IAAetD,EAAAA,EAAAA,GAC7C,CACEuD,MAAO,CACLvG,MAAO,GACPnC,SAAS,GAEX2I,SAAU,CACRxG,MAAO,GACPnC,SAAS,KAGb,GAmEF,OACEU,EAAAA,EAAAA,MAAC4D,EAAAA,SAAc,CAAAlF,SAAA,EACbN,EAAAA,EAAAA,KAAC8J,EAAAA,EAAU,CAAClF,MAAOA,EAAOH,QAASgE,KACnC7G,EAAAA,EAAAA,MAACmI,EAAAA,EAAI,CAAC9J,UAAU,iBAAgBK,SAAA,CAC7BuG,IAAa7G,EAAAA,EAAAA,KAACgK,EAAAA,EAAc,CAACC,WAAS,KACvCjK,EAAAA,EAAAA,KAAA,MAAAM,SAAI,oBACJN,EAAAA,EAAAA,KAAA,UACA4B,EAAAA,EAAAA,MAAA,QAAMqD,SA1CciC,UAGxB,GAFA/E,EAAM+C,iBAEFsE,EACF,IACE,MAAMzB,QAAqBd,EACzBiD,0DACA,OACA,CAAE,eAAgB,oBAClBC,KAAKC,UAAU,CACbR,MAAOpD,EAAUL,OAAOyD,MAAMvG,MAC9BwG,SAAUrD,EAAUL,OAAO0D,SAASxG,SAGxCgG,EAAKgB,MAAMtC,EAAauC,OAAQvC,EAAawC,MAC/C,CAAE,MAAO3F,GAAQ,MAEjB,IACE,MAAM4F,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASlE,EAAUL,OAAOyD,MAAMvG,OAChDmH,EAASE,OAAO,OAAQlE,EAAUL,OAAOwE,KAAKtH,OAC9CmH,EAASE,OAAO,WAAYlE,EAAUL,OAAO0D,SAASxG,OACtDmH,EAASE,OAAO,QAASlE,EAAUL,OAAOyE,MAAMvH,OAChD,MAAM0E,QAAqBd,EACzBiD,2DACA,OACA,CAAC,EACDM,GAGFnB,EAAKgB,MAAMtC,EAAauC,OAAQvC,EAAawC,MAC/C,CAAE,MAAOM,GAAM,CACjB,EAUsCvK,SAAA,EAC9BkJ,IACAxJ,EAAAA,EAAAA,KAAC8K,EAAAA,EAAK,CACJ7G,QAAQ,QACRpC,GAAG,OACHnB,KAAK,OACLqK,MAAM,YACNvH,WAAY,EAACsF,EAAAA,EAAAA,OACb7F,UAAU,uBACVR,QAASiH,KAGXF,IACAxJ,EAAAA,EAAAA,KAACgL,EAAAA,EAAW,CACVtI,QAAM,EACNb,GAAG,QACHY,QAASiH,EACTzG,UAAU,8BAGdjD,EAAAA,EAAAA,KAAC8K,EAAAA,EAAK,CACJ7G,QAAQ,QACRpC,GAAG,QACHnB,KAAK,QACLqK,MAAM,SACNvH,WAAY,EAACwF,EAAAA,EAAAA,OACb/F,UAAU,sCACVR,QAASiH,KAEX1J,EAAAA,EAAAA,KAAC8K,EAAAA,EAAK,CACJ7G,QAAQ,QACRpC,GAAG,WACHnB,KAAK,WACLqK,MAAM,WACNvH,WAAY,EAACuF,EAAAA,EAAAA,IAAoB,IACjC9F,UAAU,wDACVR,QAASiH,KAEX1J,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAACnC,KAAK,SAASE,UAAW4F,EAAUtF,QAAQZ,SAChDkJ,EAAc,QAAU,eAG7B5H,EAAAA,EAAAA,MAACiB,EAAAA,EAAM,CAACzC,SAAO,EAACO,QAjHIsK,KACnBzB,EAUHG,EACE,IACKnD,EAAUL,OACbwE,KAAM,CACJtH,MAAO,GACPnC,SAAS,GAEX0J,MAAO,CACLvH,MAAO,KACPnC,SAAS,KAGb,GArBFyI,EACE,IACKnD,EAAUL,OACbwE,UAAMrD,EACNsD,WAAOtD,GAETd,EAAUL,OAAOyD,MAAM1I,SAAWsF,EAAUL,OAAO0D,SAAS3I,SAkBhEuI,GAAgByB,IAAcA,GAAS,EAuFQ5K,SAAA,CAAC,aAC/BkJ,EAAc,SAAW,gBAGzB,C","sources":["shared/Components/FormElements/Button.jsx","shared/Components/FormElements/ImageUpload.jsx","shared/Components/FormElements/Input.jsx","shared/Components/UIElements/Card.jsx","shared/Components/UIElements/ErrorModal.jsx","shared/Components/UIElements/Modal.jsx","shared/hooks/form-hook.jsx","shared/hooks/http-hook.jsx","shared/util/validators.jsx","user/Pages/Auth.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Button.css\";\n\nconst Button = (props) => {\n  //console.log(props.inverse);\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || \"default\"} ${\n        props.inverse && \"button--inverse\"\n      } ${props.danger && \"button--danger\"}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n        {!isValid && <p>{props.errorText}</p>}\n      </div> \n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from '../../util/validators'\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n    // console.log(action.validators);\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n      case \"TOUCH\":\n      return{\n        ...state,\n        isTouched:true\n      }\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n    // console.log(props.validators);\n  const [inputState, dispach] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isValid: props.initialValid || false,\n    isTouched: false\n  });\n\n  const {id, onInput} = props\n  const {value , isValid} = inputState\n\n\n  useEffect(()=>{\n//sending validation back\n   onInput(id, value, isValid);\n  },[id, onInput, value, isValid]);\n\n\n  const changeHandler = (event) => {\n    dispach({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const TouchHandler =()=>{\n    dispach({\n        type:\"TOUCH\"\n    })\n  }\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        value={inputState.value}\n        onBlur={TouchHandler}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        value={inputState.value}\n        onBlur={TouchHandler}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.lable}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Backdrop from \"./Backdrop\";\nimport \"./Modal.css\";\n\nconst ModalOverlay = (props) => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit\n            ? props.onSubmit\n            : (event) => {\n                event.preventDefault();\n              }\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = (props) => {\n   // console.log(props);\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if(!state.inputs[inputId]){\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n      case \"SET_DATA\":\n        return{\n          inputs: action.inputs,\n          isValid: action.isFormValid\n        }\n    default:\n      return state;\n  }\n}\n\nconst useForm = (initialInputs, InitialFormValidity) => {\n  const [formState, dispach] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: InitialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispach({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity)=>{\n    dispach({\n      type: 'SET_DATA',\n      inputs: inputData,\n      isFormValid: formValidity\n    });\n  },[]);\n\n  return [formState, inputHandler, setFormData];\n}\n\nexport default useForm;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequest = useRef([]);\n\n  const sendrequest = useCallback(\n    async (url, method = \"GET\", headers = {}, body = null) => {\n      setIsLoading(true);\n\n      const httpAbortCtrll = new AbortController();\n      activeHttpRequest.current.push(httpAbortCtrll);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          headers,\n          body,\n          signal: httpAbortCtrll.signal,\n        });\n        const responseData = await response.json();\n        \n        activeHttpRequest.current = activeHttpRequest.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrll\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        return responseData;\n      } catch (error) {\n        setError(error.message);\n        setIsLoading(false);\n        throw error;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequest.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendrequest, clearError };\n};\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useState, useContext } from \"react\";\n\nimport Input from \"../../shared/Components/FormElements/Input\";\nimport Card from \"../../shared/Components/UIElements/Card\";\nimport Button from \"../../shared/Components/FormElements/Button\";\nimport useForm from \"../../shared/hooks/form-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport ErrorModal from \"../../shared/Components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/Components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ImageUpload from \"../../shared/Components/FormElements/ImageUpload\";\n\nimport \"./Auth.css\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendrequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n          image: {\n            value: null,\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendrequest(\n          process.env.REACT_APP_API_URL + \"/api/users/login\",\n          \"POST\",\n          { \"Content-Type\": \"application/json\" },\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          })\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (error) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append(\"email\", formState.inputs.email.value);\n        formData.append(\"name\", formState.inputs.name.value);\n        formData.append(\"password\", formState.inputs.password.value);\n        formData.append(\"image\", formState.inputs.image.value);\n        const responseData = await sendrequest(\n          process.env.REACT_APP_API_URL + \"/api/users/signup\",\n          \"POST\",\n          {},\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n"],"names":["props","href","_jsx","className","concat","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","file","setFile","useState","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","_jsxs","id","ref","style","display","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","pickImageHandler","current","click","errorText","inputReducer","state","action","value","val","validate","validators","isTouched","inputState","dispach","useReducer","initialValue","initialValid","changeHandler","TouchHandler","element","placeholder","onBlur","rows","htmlFor","lable","Modal","onCancel","onClear","header","show","error","footer","ModalOverlay","content","headerClass","onSubmit","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","React","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","isFormValid","useForm","initialInputs","InitialFormValidity","formState","useCallback","inputData","formValidity","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequest","sendrequest","async","url","method","arguments","undefined","headers","body","httpAbortCtrll","AbortController","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","clearError","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","validator","trim","test","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","inputHandler","setFormData","email","password","ErrorModal","Card","LoadingSpinner","asOverlay","process","JSON","stringify","login","userId","token","formData","FormData","append","name","image","err","Input","label","ImageUpload","switchModeHandler","prevMode"],"sourceRoot":""}