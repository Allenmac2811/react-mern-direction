{"version":3,"file":"static/js/374.ba266d95.chunk.js","mappings":"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","sources":["places/Pages/NewPlace.jsx","shared/Components/FormElements/Button.jsx","shared/Components/FormElements/ImageUpload.jsx","shared/Components/FormElements/Input.jsx","shared/Components/UIElements/ErrorModal.jsx","shared/Components/UIElements/Modal.jsx","shared/hooks/form-hook.jsx","shared/hooks/http-hook.jsx","shared/util/validators.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\n\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport Input from \"../../shared/Components/FormElements/Input\";\nimport Button from \"../../shared/Components/FormElements/Button\";\nimport useForm from \"../../shared/hooks/form-hook\";\nimport \"./NewPlace.css\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport ErrorModal from \"../../shared/Components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/Components/UIElements/LoadingSpinner\";\nimport { useHistory } from \"react-router-dom\";\nimport ImageUpload from \"../../shared/Components/FormElements/ImageUpload\";\n\nconst val = 5;\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendrequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      address: {\n        value: \"\",\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n  const history = useHistory();\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    // console.log(formState.inputs);\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"address\", formState.inputs.address.value);\n      formData.append(\"image\", formState.inputs.image.value);\n      await sendrequest(\n        process.env.REACT_APP_API_URL + \"/api/places\",\n        \"POST\",\n        { Authorization: \"Bearer \" + auth.token },\n        formData\n      );\n      //Redirect user to the different page\n      history.push(`/${auth.userId}/places`);\n    } catch (error) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          lable=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter valid Value\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          lable=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(val)]}\n          errorText={`Minimum Length is ${val}`}\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          lable=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText={`Enter Valid Address`}\n          onInput={inputHandler}\n        />\n\n        <ImageUpload\n          center\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image.\"\n        />\n\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Button.css\";\n\nconst Button = (props) => {\n  //console.log(props.inverse);\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || \"default\"} ${\n        props.inverse && \"button--inverse\"\n      } ${props.danger && \"button--danger\"}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n        {!isValid && <p>{props.errorText}</p>}\n      </div> \n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from '../../util/validators'\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n    // console.log(action.validators);\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n      case \"TOUCH\":\n      return{\n        ...state,\n        isTouched:true\n      }\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n    // console.log(props.validators);\n  const [inputState, dispach] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isValid: props.initialValid || false,\n    isTouched: false\n  });\n\n  const {id, onInput} = props\n  const {value , isValid} = inputState\n\n\n  useEffect(()=>{\n//sending validation back\n   onInput(id, value, isValid);\n  },[id, onInput, value, isValid]);\n\n\n  const changeHandler = (event) => {\n    dispach({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const TouchHandler =()=>{\n    dispach({\n        type:\"TOUCH\"\n    })\n  }\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        value={inputState.value}\n        onBlur={TouchHandler}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        value={inputState.value}\n        onBlur={TouchHandler}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.lable}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Backdrop from \"./Backdrop\";\nimport \"./Modal.css\";\n\nconst ModalOverlay = (props) => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit\n            ? props.onSubmit\n            : (event) => {\n                event.preventDefault();\n              }\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = (props) => {\n   // console.log(props);\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if(!state.inputs[inputId]){\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n      case \"SET_DATA\":\n        return{\n          inputs: action.inputs,\n          isValid: action.isFormValid\n        }\n    default:\n      return state;\n  }\n}\n\nconst useForm = (initialInputs, InitialFormValidity) => {\n  const [formState, dispach] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: InitialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispach({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity)=>{\n    dispach({\n      type: 'SET_DATA',\n      inputs: inputData,\n      isFormValid: formValidity\n    });\n  },[]);\n\n  return [formState, inputHandler, setFormData];\n}\n\nexport default useForm;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequest = useRef([]);\n\n  const sendrequest = useCallback(\n    async (url, method = \"GET\", headers = {}, body = null) => {\n      setIsLoading(true);\n\n      const httpAbortCtrll = new AbortController();\n      activeHttpRequest.current.push(httpAbortCtrll);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          headers,\n          body,\n          signal: httpAbortCtrll.signal,\n        });\n        const responseData = await response.json();\n        \n        activeHttpRequest.current = activeHttpRequest.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrll\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        return responseData;\n      } catch (error) {\n        setError(error.message);\n        setIsLoading(false);\n        throw error;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequest.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendrequest, clearError };\n};\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["NewPlace","auth","useContext","AuthContext","isLoading","error","sendrequest","clearError","useHttpClient","formState","inputHandler","useForm","title","value","isValid","description","address","image","history","useHistory","_jsxs","React","children","_jsx","ErrorModal","onClear","className","onSubmit","async","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","push","concat","userId","LoadingSpinner","asOverlay","Input","id","element","type","lable","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","center","Button","disabled","props","href","size","inverse","danger","to","Link","exact","onClick","file","setFile","useState","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","src","alt","pickImageHandler","current","click","inputReducer","state","action","val","validate","isTouched","inputState","dispach","useReducer","initialValue","initialValid","changeHandler","TouchHandler","placeholder","onBlur","rows","htmlFor","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","isFormValid","initialInputs","InitialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequest","url","method","arguments","undefined","headers","body","httpAbortCtrll","AbortController","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}