{"version":3,"file":"static/js/404.2d720aee.chunk.js","mappings":"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","sources":["places/Pages/UpdatePlace.jsx","shared/Components/FormElements/Button.jsx","shared/Components/FormElements/Input.jsx","shared/Components/UIElements/Card.jsx","shared/Components/UIElements/ErrorModal.jsx","shared/Components/UIElements/Modal.jsx","shared/hooks/form-hook.jsx","shared/hooks/http-hook.jsx","shared/util/validators.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport Input from \"../../shared/Components/FormElements/Input\";\nimport Button from \"../../shared/Components/FormElements/Button\";\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport useForm from \"../../shared/hooks/form-hook\";\nimport Card from \"../../shared/Components/UIElements/Card\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport LoadingSpinner from \"../../shared/Components/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../../shared/Components/UIElements/ErrorModal\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./NewPlace.css\";\n\nconst UpdatePlace = () => {\n  // const [isLoading, setIsLoading] = useState(true);\n\n  const { isLoading, error, sendrequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const placeId = useParams().placeId;\n  // console.log(placeId);\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendrequest(\n          `${process.env.REACT_APP_API_URL}/api/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true,\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true,\n            },\n          },\n          true\n        );\n      } catch (error) {}\n    };\n    fetchPlace();\n  }, [sendrequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      await sendrequest(\n        `${process.env.REACT_APP_API_URL}/api/places/${placeId}`,\n        \"PATCH\",\n        {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + auth.token,\n        },\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value,\n        })\n      );\n      history.push(\"/\" + auth.userId + \"/places\");\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could Not find Place</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            lable=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter valid title\"\n            initialValue={loadedPlace.title}\n            initialValid={true}\n            onInput={inputHandler}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            lable=\"description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter valid description\"\n            initialValue={loadedPlace.description}\n            initialValid={true}\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPADTE PLACE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Button.css\";\n\nconst Button = (props) => {\n  //console.log(props.inverse);\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || \"default\"} ${\n        props.inverse && \"button--inverse\"\n      } ${props.danger && \"button--danger\"}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from '../../util/validators'\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n    // console.log(action.validators);\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n      case \"TOUCH\":\n      return{\n        ...state,\n        isTouched:true\n      }\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n    // console.log(props.validators);\n  const [inputState, dispach] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isValid: props.initialValid || false,\n    isTouched: false\n  });\n\n  const {id, onInput} = props\n  const {value , isValid} = inputState\n\n\n  useEffect(()=>{\n//sending validation back\n   onInput(id, value, isValid);\n  },[id, onInput, value, isValid]);\n\n\n  const changeHandler = (event) => {\n    dispach({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const TouchHandler =()=>{\n    dispach({\n        type:\"TOUCH\"\n    })\n  }\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        value={inputState.value}\n        onBlur={TouchHandler}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        value={inputState.value}\n        onBlur={TouchHandler}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.lable}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Backdrop from \"./Backdrop\";\nimport \"./Modal.css\";\n\nconst ModalOverlay = (props) => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit\n            ? props.onSubmit\n            : (event) => {\n                event.preventDefault();\n              }\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = (props) => {\n   // console.log(props);\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if(!state.inputs[inputId]){\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n      case \"SET_DATA\":\n        return{\n          inputs: action.inputs,\n          isValid: action.isFormValid\n        }\n    default:\n      return state;\n  }\n}\n\nconst useForm = (initialInputs, InitialFormValidity) => {\n  const [formState, dispach] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: InitialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispach({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity)=>{\n    dispach({\n      type: 'SET_DATA',\n      inputs: inputData,\n      isFormValid: formValidity\n    });\n  },[]);\n\n  return [formState, inputHandler, setFormData];\n}\n\nexport default useForm;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequest = useRef([]);\n\n  const sendrequest = useCallback(\n    async (url, method = \"GET\", headers = {}, body = null) => {\n      setIsLoading(true);\n\n      const httpAbortCtrll = new AbortController();\n      activeHttpRequest.current.push(httpAbortCtrll);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          headers,\n          body,\n          signal: httpAbortCtrll.signal,\n        });\n        const responseData = await response.json();\n        \n        activeHttpRequest.current = activeHttpRequest.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrll\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        return responseData;\n      } catch (error) {\n        setError(error.message);\n        setIsLoading(false);\n        throw error;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequest.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendrequest, clearError };\n};\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["UpdatePlace","isLoading","error","sendrequest","clearError","useHttpClient","loadedPlace","setLoadedPlace","useState","history","useHistory","auth","useContext","AuthContext","placeId","useParams","formState","inputHandler","setFormData","useForm","title","value","isValid","description","useEffect","async","responseData","concat","process","place","fetchPlace","_jsx","className","children","LoadingSpinner","_jsxs","React","ErrorModal","onClear","onSubmit","event","preventDefault","Authorization","token","JSON","stringify","inputs","push","userId","err","Input","id","element","type","lable","validators","VALIDATOR_REQUIRE","errorText","initialValue","initialValid","onInput","VALIDATOR_MINLENGTH","Button","disabled","Card","props","href","size","inverse","danger","to","Link","exact","onClick","inputReducer","state","action","val","validate","isTouched","inputState","dispach","useReducer","changeHandler","target","TouchHandler","placeholder","onChange","onBlur","rows","htmlFor","style","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","isFormValid","initialInputs","InitialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequest","useRef","url","method","arguments","length","undefined","headers","body","httpAbortCtrll","AbortController","current","response","fetch","signal","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}